{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","metadata","setMetadata","_useState3","_useState4","metadataparcial","setMetadataParcial","_useState5","_useState6","route","setRoute","_useState7","_useState8","routeparcial","setRouteParcial","Limpar","react_default","a","createElement","className","value","onChange","event","target","placeholder","onClick","findMetaData","match","findRoute","slice","index","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"mMA6DeA,MA1Df,WAAe,IAAAC,EAEmBC,mBAAS,IAF5BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAENK,EAFMH,EAAA,GAEII,EAFJJ,EAAA,GAAAK,EAGiCN,mBAAS,IAH1CO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGNE,EAHMD,EAAA,GAGWE,EAHXF,EAAA,GAAAG,EAIaV,mBAAS,IAJtBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAINE,EAJMD,EAAA,GAICE,EAJDF,EAAA,GAAAG,EAK2Bd,mBAAS,IALpCe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAKNE,EALMD,EAAA,GAKQE,EALRF,EAAA,GAwBPG,EAAS,WACbb,EAAY,IACZQ,EAAS,IACTJ,EAAmB,IACnBQ,EAAgB,KAmBlB,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAASH,EAAAC,EAAAC,cAAA,SAAOE,MAAOnB,EAAUoB,SA3CxB,SAAAC,GAAS,IAC3BF,EAAUE,EAAMC,OAAhBH,MACRlB,EAAYkB,IAyCqEI,YAAY,sCAC3FR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAASH,EAAAC,EAAAC,cAAA,SAAOE,MAAOX,EAAOY,SAvCtB,SAAAC,GAAS,IAC1BF,EAAUE,EAAMC,OAAhBH,MACRV,EAASU,IAqCoEI,YAAY,mCACvFR,EAAAC,EAAAC,cAAA,UAAQO,QAnCE,WACZ,IAAIC,EAAezB,EAAS0B,MAAM,YAC9BC,EAAYnB,EAAMkB,MAAM,YAC1B1B,GAAYyB,GAAgBpB,EAAmBL,EAAS4B,MAAM,EAAGH,EAAaI,MAAQ,IACtFrB,GAASmB,GAAad,EAAgBL,EAAMoB,MAAM,EAAGD,EAAUE,MAAQ,MA+BvE,SACAd,EAAAC,EAAAC,cAtBc,WAChB,OACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZlB,EAASe,EAAAC,EAAAC,cAAA,WACTb,EAAgBW,EAAAC,EAAAC,cAAA,WAChBT,EAAMO,EAAAC,EAAAC,cAAA,WACNL,GAEHG,EAAAC,EAAAC,cAAA,WACGjB,GAAYQ,GAASO,EAAAC,EAAAC,cAAA,UAAQO,QAASV,GAAjB,aAY1B,QC5CSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhC,EAAAC,EAAAC,cAACF,EAAAC,EAAMgC,WAAP,KACEjC,EAAAC,EAAAC,cAACgC,EAAD,QAOJnB","file":"static/js/main.9854fc7e.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n\n  const [metadata, setMetadata] = useState('');\n  const [metadataparcial, setMetadataParcial] = useState('');\n  const [route, setRoute] = useState('');\n  const [routeparcial, setRouteParcial] = useState('');\n\n  const listenerInputMetada = event => {\n    const { value } = event.target;\n    setMetadata(value);\n  }\n\n  const listenerInputRoute = event => {\n    const { value } = event.target;\n    setRoute(value);\n  }\n\n  const Gerar = () => {\n    var findMetaData = metadata.match(\"pathname\")\n    var findRoute = route.match(\"pathname\")\n    { metadata && findMetaData && setMetadataParcial(metadata.slice(0, findMetaData.index - 1)) }\n    { route && findRoute && setRouteParcial(route.slice(0, findRoute.index - 1)) }\n  }\n\n  const Limpar = () => {\n    setMetadata('');\n    setRoute('');\n    setMetadataParcial('');\n    setRouteParcial('');\n  }\n\n  const Resultado = () => {\n    return (\n      <div>\n        <div className='resultado'>\n          {metadata}<br />\n          {metadataparcial}<br />\n          {route}<br />\n          {routeparcial}\n        </div>\n        <div>\n          {metadata && route && <button onClick={Limpar}>Limpar</button>}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h2>LIMPEZA DE CACHE - URL</h2>\n      <div className='Campos'><input value={metadata} onChange={listenerInputMetada} placeholder='Insira a URL inteira do Metadata'></input></div>\n      <div className='Campos'><input value={route} onChange={listenerInputRoute} placeholder='Insira a URL inteira do Route'></input></div>\n      <button onClick={Gerar}>Gerar</button>\n      <Resultado></Resultado>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}